#!/bin/bash

setup_zram() {
    log "Checking zram"

    pl ''
    p_file -x /run/tliset/zram-status "$(cat <<'EOF'
#!/bin/sh
set -e -u

dir=/sys/block/zram0
if test ! -d "$dir"; then
    echo "status: disabled"
    exit 0
fi

mem_used_total="$(cat $dir/mem_used_total)"
orig_data_size="$(cat $dir/orig_data_size)"

echo "status: enabled"
echo "compressed_size: $(($mem_used_total * 100 / $orig_data_size))%"
echo "disksize: $(($(cat $dir/disksize) / 1048576))M"
echo "compr_data_size: $(($(cat $dir/compr_data_size) / 1024))K"
echo "orig_data_size: $(($orig_data_size / 1024))K"
echo "mem_used_total: $(($mem_used_total / 1024))K"
echo "max_comp_streams: $(cat $dir/max_comp_streams)"
echo "comp_algorithm: $(cat $dir/comp_algorithm)"
EOF
)"

    pl ''
    p_file -x /run/tliset/zram-enable "$(cat <<'EOF'
#!/bin/sh
set -e -u

read ignore memtotal <<eof
$(grep -o '\<MemTotal:\s\+[0-9]\+' /proc/meminfo)
eof
SWAP_SIZE=$(($memtotal * 2 * 1024))

num_cpus=$(grep -c processor /proc/cpuinfo)
if [[ 0 = "$num_cpus" ]]; then
    num_cpus=1
fi

echo $num_cpus > /sys/block/zram0/max_comp_streams
echo "${SWAP_SIZE}" > /sys/block/zram0/disksize

/usr/sbin/mkswap /dev/zram0
/usr/sbin/swapon -p 100 /dev/zram0
EOF
)"
    
    pl ''
    p_file -x /run/tliset/zram-disable "$(cat <<'EOF'
#!/bin/sh
set -e -u

if grep -q '^/dev/zram0\s' /proc/swaps; then
    /usr/sbin/swapoff "/dev/zram0"
fi
EOF
)"

    pl ''
    p_file '"$1/tliset-zram.service"' "\
[Unit]
Description=Service enabling RAM compression using zRam

[Install]
WantedBy=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/sbin/modprobe zram num_devices=1
ExecStart=/run/tliset/zram-enable
ExecStop=/run/tliset/zram-disable
RemainAfterExit=yes
"
    multi_user_wants+=(tliset-zram.service)

}
