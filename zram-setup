#!/bin/bash

setup_zram() {
    log "Checking zram"

    p_nl
    p_file -x top:/run/tliset/zram-status "$(cat <<'EOF'
#!/bin/sh
set -e -u

dir=/sys/block/zram0
if test ! -d "$dir"; then
    echo "status: disabled"
    exit 0
fi

mem_used_total="$(cat $dir/mem_used_total)"
orig_data_size="$(cat $dir/orig_data_size)"

echo "status: enabled"
echo "compressed_size: $(($mem_used_total * 100 / $orig_data_size))%"
echo "disksize: $(($(cat $dir/disksize) / 1048576))M"
echo "compr_data_size: $(($(cat $dir/compr_data_size) / 1024))K"
echo "orig_data_size: $(($orig_data_size / 1024))K"
echo "mem_used_total: $(($mem_used_total / 1024))K"
echo "max_comp_streams: $(cat $dir/max_comp_streams)"
echo "comp_algorithm: $(cat $dir/comp_algorithm)"
EOF
)"

    p_nl
    p_file top:/run/tliset/zram-enable.sh "$(cat <<'EOF'
set -e -u

read_memtotal() {
	memtotal=
	{
		local line
		while read -r line; do
			if [[ $line =~ ^MemTotal:[[:blank:]]*([0-9]+)[[:blank:]]+(.*)$ ]]; then
				memtotal="${BASH_REMATCH[1]}"
				local units="${BASH_REMATCH[2]}"
				[[ $units == kB ]] || err "unexpected MemTotal units $units"
				local scale=1024
				memtotal="$((memtotal * scale))"
			fi
		done
		local a=1
	} < /proc/meminfo
	[[ $memtotal ]] || err "Failed to locate MemTotal in /proc/meminfo"
}

read_memtotal
SWAP_SIZE=$(($memtotal / 10 * 18))

num_cpus=$(grep -c processor /proc/cpuinfo)
if [[ 0 = "$num_cpus" ]]; then
    num_cpus=1
fi

rm -f /run/tliset/zram-device
device="$(zramctl --find --size "$SWAP_SIZE" -t "$num_cpus")"
printf '%s\n' "$device" > /run/tliset/zram-device

/sbin/mkswap "$device"
/sbin/swapon -p 100 "$device"
EOF
)"
    
    p_nl
    p_file top:/run/tliset/zram-disable.sh "$(cat <<'EOF'
#!/bin/sh
set -e -u

device=
[[ -f /run/tliset/zram-device ]] || exit 0
read -r device < /run/tliset/zram-device || :
[[ $device ]] || exit 0
if grep -q "^$device\\s" /proc/swaps; then
    /sbin/swapoff "$device"
fi
zramctl --reset "$device"
rm /run/tliset/zram-device
EOF
)"

    p_nl
    p_file service:tliset-zram.service "\
[Unit]
Description=Service enabling RAM compression using zRam

[Install]
WantedBy=multi-user.target

[Service]
Type=oneshot
ExecStart=/sbin/modprobe zram num_devices=1
ExecStart=/bin/bash /run/tliset/zram-enable.sh
ExecStop=/bin/bash /run/tliset/zram-disable.sh
RemainAfterExit=yes
"
    multi_user_wants+=(tliset-zram.service)

}
